{
  "name": "note-sync",
  "displayName": "Note Sync",
  "description": "Note Sync（笔记同步）",
  "version": "1.0.6",
  "license": "MIT",
  "publisher": "JSShou",
  "icon": "images/logo.png",
  "homepage": "https://github.com/xuzhongpeng/vscode-note-sync",
  "engines": {
    "vscode": "^1.50.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/xuzhongpeng/vscode-note-sync"
  },
  "bugs": {
    "url": "https://github.com/xuzhongpeng/vscode-note-sync/issues"
  },
  "keywords": [
    "github笔记同步",
    "git note sync",
    "自动同步",
    "Automatic synchronization"
  ],
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "workspaceContains:*"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [],
    "configuration": {
      "title": "Note Sync",
      "type": "object",
      "properties": {
        "noteSync.enableNoteSync": {
          "type": "boolean",
          "description": "you can open note sync plugin with true",
          "default": false
        },
        "noteSync.delayTime": {
          "type": "number",
          "description": "delay time to synchronization projects.The `push` command will be executed after `delayTime`| `10000` millisecond",
          "default": 10000
        },
        "noteSync.shell": {
          "type": "string",
          "description": "Specify what shell will be used for all the commands.unix default is `/bin/sh`，windows default is `cmd.exe`",
          "default": null
        },
        "noteSync.pullCommand": {
          "type": "string",
          "description": "Specify the command to be executed after project is open",
          "default": null
        },
        "noteSync.pushCommitMessage": {
          "type": "string",
          "description": "push commit message to Github or Gitlab. Only works when `noteSync.pushCommand` is not set",
          "default": "note-sync syncing"
        },
        "noteSync.pushCommand": {
          "type": "string",
          "description": "Specify the command to be executed after file saved.",
          "default": null
        },
        "noteSync.pullStatusMessage": {
          "type": "string",
          "description": "Specify the status bar message when the shell command began to run.",
          "default": "Note pulling"
        },
        "noteSync.pushStatusMessage": {
          "type": "string",
          "description": "Specify the status bar message when the shell command is running.",
          "default": "Notes uploading"
        },
        "noteSync.finishStatusMessage": {
          "type": "string",
          "description": "Specify the status bar message after the shell command finished executing.",
          "default": "Note upload complete"
        }
      }
    }
  },
  "scripts": {
    "push": "vsce publish",
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/vscode": "^1.50.0",
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.0.0",
    "@types/node": "^12.11.7",
    "eslint": "^7.9.0",
    "@typescript-eslint/eslint-plugin": "^4.1.1",
    "@typescript-eslint/parser": "^4.1.1",
    "glob": "^7.1.6",
    "mocha": "^8.1.3",
    "typescript": "^4.0.2",
    "vscode-test": "^1.4.0"
  }
}